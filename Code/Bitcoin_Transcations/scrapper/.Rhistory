getwd()
install.packages(bigmemory)
install.packages("bigmemory")
install.packages("RSQLite")
install.packages("RSQLite")
install.packages("RSQLite")
install.packages("sqldf")
install.packages("installr")
install.packages("RSQLite")
install.packages("DBI")
install.packages("RSQLite")
install.packages("igraph")
install.packages("rvest")
install.packages("curl")
install.packages("httr")
install.packages("~/Downloads/R_Packages/curl_0.9.5.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/R_Packages/curl_0.9.5.tar.gz", repos = NULL, type = "source")
install.packages("httr")
install.packages("rvest")
# Setting working dir
getwd()
setwd("/home/pankaj/MasterThesis")
# Load the SQLite library
library("RSQLite");
# Assign the sqlite datbase and full path to a variable
dbfile = "/home/pankaj/blockchain.db";
Instantiate the dbDriver to a convenient object
sqlite = dbDriver("SQLite");
# Assign the connection string to a connection object
mydb = dbConnect(sqlite, dbfile);
# Request a list of tables using the connection object
dbListTables(mydb);
# Assign the results of a SQL query to an object
results = dbSendQuery(mydb, "SELECT user_from_key, user_key_to, value, date FROM user_edges LIMIT 100");
# Return results from a custom object to a data.frame
data = fetch(results, n=-1);
# Print data frame to console
data;
# Assign the results of a SQL query to an object
results = dbSendQuery(mydb, "SELECT user_from_key, user_key_to, value, date FROM user_edges ORDER BY date LIMIT 100");
# Return results from a custom object to a data.frame
data = fetch(results, n=-1);
# Print data frame to console
data;
# Clear the results and close the connection
dbClearResult(results);
# Setting working dir
getwd()
setwd("/home/pankaj/MasterThesis")
# Load the SQLite library
library("RSQLite");
# Assign the sqlite datbase and full path to a variable
dbfile = "/home/pankaj/blockchain.db";
library("RSQLite");
# Instantiate the dbDriver to a convenient object
sqlite = dbDriver("SQLite");
# Assign the connection string to a connection object
mydb = dbConnect(sqlite, dbfile);
# Request a list of tables using the connection object
dbListTables(mydb);
# Setting working dir
getwd()
setwd("/home/pankaj/MasterThesis")
# Load the SQLite library
library("RSQLite");
# Assign the sqlite datbase and full path to a variable
dbfile = "/home/pankaj/blockchain.db";
# Instantiate the dbDriver to a convenient object
sqlite = dbDriver("SQLite");
# Assign the connection string to a connection object
mydb = dbConnect(sqlite, dbfile);
# Request a list of tables using the connection object
dbListTables(mydb);
source('~/MasterThesis/Code/Bitcoin_Transcations/scrapper/scrapper.R')
